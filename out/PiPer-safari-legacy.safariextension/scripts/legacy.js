var a;a||(a=!0,(()=>{// Input 0
(function() {
  let upgradeAlertShown = false;
  const localizedUpgradeAlertMessage = function() {
    const language = navigator.language.substring(0, 2);
    switch(language) {
      case "it":
        return "Apple finir\u00e0 presto il supporto per questa versione di PiPer. Esegui l'upgrade alla versione per [url]Mac App Store[/url] ora";
      case "es":
        return "Apple terminar\u00e1 el soporte para esta versi\u00f3n de PiPer pronto. Por favor actualice a la versi\u00f3n de [url]Mac App Store[/url] ahora";
      case "de":
        return "Apple wird den Support f\u00fcr diese Version von PiPer in K\u00fcrze beenden. Aktualisieren Sie jetzt auf die [url]Mac App Store-Version[/url]";
      case "nl":
        return "Apple zal binnenkort de ondersteuning voor deze versie van PiPer be\u00ebindigen. Upgrade nu naar de [url]Mac App Store-versie[/url]";
      case "fr":
        return "Apple va bient\u00f4t mettre fin au support de cette version de PiPer. Veuillez passer \u00e0 la version [url]Mac App Store[/url] maintenant";
      case "pt":
        return "A Apple encerrar\u00e1 o suporte para esta vers\u00e3o do PiPer em breve. Por favor, atualize para a vers\u00e3o [url]Mac App Store[/url] agora";
      case "en":
      default:
        return "Apple will end support for this version of PiPer soon. Please upgrade to the [url]Mac App Store version[/url] now";
    }
  };
  const showAlert = function(message, callback) {
    const alert = document.createElement("div");
    alert.style.cssText = `
      position: fixed;
      top: 30px;
      left: 50%;
      transform: translateX(-50%);
      width: calc(100% - 80px);
      max-width: 600px;
      border-radius: 5px;
      background-color: #E66;
      padding: 10px;
      z-index: 9999;
      font-family: -apple-system;
      line-height: 1.1;
      color: white;
    `;
    const image = document.createElement("img");
    image.src = safari.extension.baseURI + "images/default.svg";
    image.style.cssText = `
      float: left;
      width: 25px;
      height: 25px;
      margin: 5px;
    `;
    alert.appendChild(image);
    const close = document.createElement("div");
    close.innerHTML = "\u00d7";
    close.style.cssText = `
      float: right;
      width: 25px;
      margin: 0px 5px;
      font-size: 30px;
      text-align: center;
      opacity: 0.6;
      cursor: pointer;
    `;
    alert.appendChild(close);
    const content = document.createElement("div");
    content.innerHTML = `<b style="font-size:18px;font-weight:700">PiPer</b></br>${message}`;
    content.style.cssText = `
      font-size: 16px;
      margin: 0px 45px;
    `;
    alert.appendChild(content);
    close.addEventListener("click", function() {
      document.body.removeChild(alert);
      callback();
    });
    document.body.appendChild(alert);
  };
  const showUpgradeAlertIfNeeded = function(dismissedTimestamp) {
    const currentTimestamp = Date.now();
    let alertInterval;
    if (currentTimestamp >= 1556665200000) {
      alertInterval = 3.6e+6;
    } else {
      if (currentTimestamp >= 1554073200000) {
        alertInterval = 8.64e+7;
      } else {
        if (currentTimestamp >= 1551398400000) {
          alertInterval = 6.048e+8;
        } else {
          alertInterval = 2.628e+9;
        }
      }
    }
    if (upgradeAlertShown || currentTimestamp - dismissedTimestamp < alertInterval) {
      return;
    }
    const message = localizedUpgradeAlertMessage().replace("[url]", '<a href="https://itunes.apple.com/app/id1421915518?mt=12&ls=1" style="text-decoration:underline;color:white" target="_blank">').replace("[/url]", "</a>");
    showAlert(message, function() {
      safari.self.tab.dispatchMessage("setUpgradeAlertShown", currentTimestamp);
    });
    upgradeAlertShown = true;
  };
  const messageHandler = function(messageEvent) {
    if (messageEvent.name === "upgradeAlertShownResponse") {
      safari.self.removeEventListener("message", messageHandler, false);
      const dismissedTimestamp = messageEvent.message;
      showUpgradeAlertIfNeeded(dismissedTimestamp);
    }
  };
  document.addEventListener("webkitpresentationmodechanged", function(event) {
    const video = event.target;
    if (video.webkitPresentationMode == "picture-in-picture") {
      safari.self.addEventListener("message", messageHandler, false);
      safari.self.tab.dispatchMessage("getUpgradeAlertShown");
    }
  }, {capture:true});
})();
})());
//# sourceMappingURL=data:application/json;base64,
